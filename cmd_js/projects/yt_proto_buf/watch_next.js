let token_enc=`
CCgSJRILOHppbEVnX2ZlWkEyAMgBAOABA6ICDSj___________8BQAAYACqnDDJzNkw2d3lXQ1FxVENRb0Q4ajRBQ2czQ1Bnb0lpLW1laTlLOXZzSkxDZ1B5UGdBS0RjSS1DZ2pib0xYSGs5YWQwbThLQV9JLUFBb093ajRMQ09xNHlJYUJqSXkwdlFFS0FfSS1BQW9Od2o0S0NMV29rNjJkcnFiUUlRb0Q4ajRBQ2c3Q1Bnc0kycDJDdHJ5ZXBLTEhBUW9EOGo0QUNnN0NQZ3NJNHNHTjd0bXpxdnVYQVFvRDhqNEFDZzdDUGdzSWc5dkh1UExSa1l2WUFRb0Q4ajRBQ2czQ1Bnb0l0UHlLNnJfZWlkbDJDZ1B5UGdBS0RjSS1DZ2l4cTctOXJlaUE4ellLQV9JLUFBb053ajRLQ0pYZjdmU3N6dEh6ZndvRDhqNEFDZzNDUGdvSXBwMnoxdU9uM09RbUNnUHlQZ0FLRHNJLUN3aXZzc21fbk9fU2lhWUJDZ1B5UGdBS0RzSS1Dd2k3djdQUm1xVDVxcWtCQ2dQeVBnQUtEY0ktQ2dqQ182dWZyTjNkOWxnS0FfSS1BQW9Od2o0S0NLRGMydUdlOThpZ2J3b0Q4ajRBQ2c3Q1Bnc0loLWJFOW82Tms3U3hBUW9EOGo0QUNpZlNQaVFLSWxCTVNGUm9NVWx1YUdoM1ZEWmpNa3BPZEZWcFNtdGhTRGhaVW5GNmFGVTNRV2NLQV9JLUFBb093ajRMQ1BILTJKMkNfcW5GaFFFS0FfSS1BQW9Pd2o0TENMN3hqdm41OW9uaHpRRUtBX0ktQUFvTndqNEtDSld0eC03WXJwZXpZQW9EOGo0QUNnN0NQZ3NJanJpdXdyblJ6TnpyQVFvRDhqNEFDZzdDUGdzSTI5dnowZHZyOF9tT0FRb0Q4ajRBQ2c3Q1Bnc0lfTWljcXB1THlJT3dBUW9EOGo0QUNnM0NQZ29JNUpLX3BvdW5qdTl6Q2dQeVBnQUtEc0ktQ3dpR2dyQ2UyTGpQazYwQkNnUHlQZ0FLRHNJLUN3aUFzNm5EdWFuWF9MRUJDZ1B5UGdBS0RjSS1DZ2owNnNpWHc3V25zRUlLQV9JLUFBb093ajRMQ05MSzh2SDd5X2JkNEFFS0FfSS1BQW9Pd2o0TENLM1c4dWpEdUlQUXNRRUtBX0ktQUFvTndqNEtDT3FMM1plcDQ3Nk1TUW9EOGo0QUNnN0NQZ3NJM0xQWjJiZm1oNTdoQVFvRDhqNEFDZzNDUGdvSWtKdm9rNFRKZ09oLUNnUHlQZ0FLRGNJLUNnaW56N3JQdm9lb3cxa0tBX0ktQUFvTndqNEtDTURCb3F5RHplekJTZ29EOGo0QUNnM0NQZ29JNFlPQnM0aVpqY0p3Q2dQeVBnQUtEY0ktQ2dqYng2ZkQyYUNaMkhVS0FfSS1BQW9Pd2o0TENMV2l5NV9kNlkzVjhBRUtBX0ktQUFvT3dqNExDTVcybnNXRG5yZkRfUUVLQV9JLUFBb093ajRMQ0xiZXVNbUsxOVN5OEFFS0FfSS1BQW9Pd2o0TENMWGNxdjNwcmQyd3lnRVNLQUFDQkFZSUNnd09FQklVRmhnYUhCNGdJaVFtS0Nvc0xqQXlORFk0T2p3LVFFSkVSa2hLVEU0YUJBZ0FFQUVhQkFnQ0VBTWFCQWdFRUFVYUJBZ0dFQWNhQkFnSUVBa2FCQWdLRUFzYUJBZ01FQTBhQkFnT0VBOGFCQWdRRUJFYUJBZ1NFQk1hQkFnVUVCVWFCQWdXRUJjYUJBZ1lFQmthQkFnYUVCc2FCQWdjRUIwYUJBZ2VFQjhhQkFnZ0VDRWFCQWdpRUNNYUJBZ2tFQ1VhQkFnbUVDY2FCQWdvRUNrYUJBZ3FFQ3NhQkFnc0VDMGFCQWd1RUM4YUJBZ3dFREVhQkFneUVETWFCQWcwRURVYUJBZzJFRGNhQkFnNEVEa2FCQWc2RURzYUJBZzhFRDBhQkFnLUVEOGFCQWhBRUVFYUJBaENFRU1hQkFoRUVFVWFCQWhHRUVjYUJBaElFRWthQkFoS0VFc2FCQWhNRUUwYUJBaE9FRThxS0FBQ0JBWUlDZ3dPRUJJVUZoZ2FIQjRnSWlRbUtDb3NMakF5TkRZNE9qdy1RRUpFUmtoS1RFNGoPd2F0Y2gtbmV4dC1mZWVkcgA%3D
`;
token_enc="CDwSTxILRFlPbFNoUWVQalkiAldMMiZFQUVZQVRnQllndHNkbmxzYm1GeFFqazJWV2dDMmdFQ0NBRSUzRDgDwAEAyAEA4AEDogIFKLEjQAD4AgAYACrDEjJzNkw2d3pyRFFyb0RRb0Q4ajRBQ2c3Q1Bnc0l3LTZSeUpqYTM2clRBUW9EOGo0QUNpZlNQaVFLSWxCTWNXSlROMEZXVmtWeVJtbFhSRTlCVm5KUWREZGhXVzF1ZFhWUFRGbDJUMkVLQV9JLUFBb053ajRLQ0llQXFOQ0VodERaZUFvRDhqNEFDZzdDUGdzSTZLYjBsZGp1dzVMZkFRb0Q4ajRBQ2c3Q1Bnc0lydFBjbzczRl84UDBBUW9EOGo0QUNnM0NQZ29JdHRqSG5JT0R0LXNYQ2dQeVBnQUtEc0ktQ3dpaG1fLWRwbzJ1M01NQkNnUHlQZ0FLRGNJLUNnaTA2N2lKbllfTnpFb0tBX0ktQUFvTndqNEtDS1R4bmJmS3hkN2xRUW9EOGo0QUNnN0NQZ3NJOTVqV2lOV1d3cjZ0QVFvRDhqNEFDZzNDUGdvSTFzVzNoSXFnNXRzUUNnUHlQZ0FLRGNJLUNnam5tSkh3aV9la2dYa0tBX0ktQUFvT3dqNExDT21ZNExDeGdhbWRnQUVLQV9JLUFBb053ajRLQ0ltRGxMeXc1Y0toU1FvRDhqNEFDZzdDUGdzSTY3UEU2S3EzaDRqRUFRb0Q4ajRBQ2czQ1Bnb0l0Sl9HOGFTWTJzQjJDZ1B5UGdBS0RzSS1Dd2lmNE1Edml1bUw5WUVCQ2dQeVBnQUtEc0ktQ3dqY3dhTHp6TWlxNUtRQkNnUHlQZ0FLRHNJLUN3aWprSlhzNGYzdWpZQUJDZ1B5UGdBS0RjSS1DZ2pQOElQYTc5ZlBod2NLQV9JLUFBb053ajRLQ055YXM5V3B3WXFCT0FvRDhqNEFDZzdDUGdzSWpidUpnNl9UbGFDX0FRb0Q4ajRBQ2c3Q1Bnc0l4ZDZuaE9HSmxybW5BUW9EOGo0QUNnM0NQZ29JOTVQS25kUGFfNThwQ2dQeVBnQUtEY0ktQ2dqZGp2V3dndm5HLTM0S0FfSS1BQW9Pd2o0TENKUFEtN2FqNlA3S3BnRUtBX0ktQUFvTndqNEtDSU83dWJ5UjVydU1UZ29EOGo0QUNnN0NQZ3NJX2RYbGtKakE0ZUw1QVFvRDhqNEFDZzNDUGdvSW9LLWg2b2ZBMnJ3TkNnUHlQZ0FLRGNJLUNnakdnY2FNd3VQMnh3UUtBX0ktQUFvTndqNEtDTGF1dEtXeThvQ09SUW9EOGo0QUNnN0NQZ3NJczhYTjZjSGp4ckdHQVFvRDhqNEFDZzNDUGdvSXFmWHFxdGVTeWVKbUNnUHlQZ0FLRHNJLUN3amtsSjJucU12NjhhVUJDZ1B5UGdBS0RzSS1Dd2pQdnJpX250V2p2Nm9CQ2dQeVBnQUtEc0ktQ3dqeXQ0ZnZtX2ZRaWZnQkNnUHlQZ0FLRHNJLUN3alc3UExHa3NfbDRLd0JDZ1B5UGdBS0RjSS1DZ2lVcTRlaDVzeUNzaTRLQV9JLUFBb093ajRMQ092MXhJZWV2dG5ob2dFS0FfSS1BQW9Od2o0S0NOQ2IyNkRmM3JhY2J3b0Q4ajRBQ2c3Q1Bnc0l6dWJUaTVDVF9iUzBBUW9EOGo0QUNnN0NQZ3NJMjl2ejBkdnI4X21PQVFvRDhqNEFDZzdDUGdzSXRjTE1xWkNSbWF2VkFRb0Q4ajRBQ2czQ1Bnb0l1LUd4b3U2OG52NXlDZ1B5UGdBS0RjSS1DZ2lfeC1qb3JNYXR4MEVLQV9JLUFBb053ajRLQ08yT25wN1UzT1RFYndvRDhqNEFDZzdDUGdzSXNhbjM5ZnpSc082MEFRb0Q4ajRBQ2c3Q1Bnc0k4SVNwdk5uVXU5V2NBUW9EOGo0QUNnM0NQZ29JdS1lQm9kVEZ2N29PQ2dQeVBnQUtEY0ktQ2dpbHE4TFpzdl9hdWhzS0FfSS1BQW9Pd2o0TENKRzR1TW5vdUwzQjNnRUtBX0ktQUFvT3dqNExDT2JfNUlYZmctRHczUUVLQV9JLUFBb093ajRMQ0l6UjNmeVA3dXp6eUFFS0FfSS1BQW9Pd2o0TENOdko5dlhDbnJUR3lnRUtBX0ktQUFvT3dqNExDSXJyMklLdjlhN1pfQUVLQV9JLUFBb093ajRMQ09POHlaT3lnWm5DaHdFS0FfSS1BQW9Od2o0S0NLbUJ0Sl9Ea2Z2ak5Bb0Q4ajRBQ2czQ1Bnb0kxWnFLeThtanRNRXpDZ1B5UGdBS0RzSS1Dd2lvaHZia25zei0ydjhCQ2dQeVBnQUtKOUktSkFvaVVFdzBhelkwVjJWdGNtOUhiazlwYVVWQlZHSm5RMnczV25OYWQxRkJYM2hDWVJJOEFBSUVCZ2dLREE0UUVoUVdHQm9jSGlBaUpDWW9LaXd1TURJME5qZzZQRDVBUWtSR1NFcE1UbEJTVkZaWVdseGVZR0prWm1ocWJHNXdjblIyR2dRSUFCQUJHZ1FJQWhBREdnUUlCQkFGR2dRSUJoQUhHZ1FJQ0JBSkdnUUlDaEFMR2dRSURCQU5HZ1FJRGhBUEdnUUlFQkFSR2dRSUVoQVRHZ1FJRkJBVkdnUUlGaEFYR2dRSUdCQVpHZ1FJR2hBYkdnUUlIQkFkR2dRSUhoQWZHZ1FJSUJBaEdnUUlJaEFqR2dRSUpCQWxHZ1FJSmhBbkdnUUlLQkFwR2dRSUtoQXJHZ1FJTEJBdEdnUUlMaEF2R2dRSU1CQXhHZ1FJTWhBekdnUUlOQkExR2dRSU5oQTNHZ1FJT0JBNUdnUUlPaEE3R2dRSVBCQTlHZ1FJUGhBX0dnUUlRQkJCR2dRSVFoQkRHZ1FJUkJCRkdnUUlSaEJIR2dRSVNCQkpHZ1FJU2hCTEdnUUlUQkJOR2dRSVRoQlBHZ1FJVUJCUkdnUUlVaEJUR2dRSVZCQlZHZ1FJVmhCWEdnUUlXQkJaR2dRSVdoQmJHZ1FJWEJCZEdnUUlYaEJmR2dRSVlCQmhHZ1FJWWhCakdnUUlaQkJsR2dRSVpoQm5HZ1FJYUJCcEdnUUlhaEJyR2dRSWJCQnRHZ1FJYmhCdkdnUUljQkJ4R2dRSWNoQnpHZ1FJZEJCMUdnUUlkaEIzS2p3QUFnUUdDQW9NRGhBU0ZCWVlHaHdlSUNJa0ppZ3FMQzR3TWpRMk9EbzhQa0JDUkVaSVNreE9VRkpVVmxoYVhGNWdZbVJtYUdwc2JuQnlkSFlqD3dhdGNoLW5leHQtZmVlZHIA";
let base64_enc=decodeURIComponent(token_enc).replaceAll("_","/").replaceAll("-","+");
let base64url_enc="CAAQhGciEwi1_PWQz4_8AhVjQkwIHeQaDw8=";
base64url_enc;
// base64_enc=base64url_enc.replaceAll("_","/").replaceAll("-","+");
const text=atob(base64_enc);
const token_binary=new Uint8Array([...text].map(e => e.charCodeAt(0)));
// const string_decoder=new TextDecoder('utf-8');
/** @type {import("protobufjs")} */
var protobuf;
protobuf=require('protobufjs');
async function run() {
let root=await protobuf.load("yt_token.proto");
var A=root.lookupType("A");
/** @type {protobuf.Message<YtTokenProtoMessage>} */
let message=A.decode(token_binary);
let obj=A.toObject(message);
console.log(obj);
}
if(typeof exports==="object") {
	exports.token_binary=token_binary;
}
run();
